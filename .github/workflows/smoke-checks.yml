name: Smoke Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  HOMEBREW_NO_INSTALL_CLEANUP: 1 # Disable cleanup for homebrew, we don't need it on CI

jobs:
  automated-code-review:
    name: Automated Code Review
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v1
      - uses: ./.github/actions/set-build-image-var
      - name: Cache RubyGems
        uses: actions/cache@v2
        id: rubygem-cache
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
      - name: Cache Mint
        uses: actions/cache@v2
        id: mint-cache
        with:
          path: /usr/local/lib/mint
          key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
          restore-keys: ${{ runner.os }}-mint-
      - uses: ./.github/actions/bootstrap
      - name: Run Danger
        run: bundle exec danger
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Run Linting
        run: ./Scripts/run-linter.sh

  build-and-test-ui-debug:
    name: Test SwiftUI (Debug)
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - uses: actions/setup-python@v3.0.0
      with:
        python-version: 3.8
        cache: 'pip'
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
      env:
        INSTALL_SONAR: true
    - name: Prepare iPhone 12 with iOS 15.4
      uses: ./.github/actions/prepare-ios-simulator
      with:
        device: "iPhone 12"
        ios: "15.4"
        xcode: "13.3.1"
    - name: Run Tests (Debug)
      run: bundle exec fastlane test_ui device:"iPhone 12 (15.4)"
    - name: Get branch name
      id: get_branch_name
      run: echo "##[set-output name=branch;]${GITHUB_REF#refs/heads/}"
    - name: Run Sonar analysis
      run: bundle exec fastlane sonar_upload
      env:
        BRANCH_NAME: ${{ steps.get_branch_name.outputs.branch }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        PR_NUMBER: ${{ github.event.number }}
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Test (Debug)"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}

  build-apps:
    name: Build Demo App
    runs-on: macos-12
    steps:
    - uses: actions/checkout@v1
    - name: Set build image var
      run: echo "ImageVersion=$ImageVersion"  >> $GITHUB_ENV
    - name: Cache RubyGems
      uses: actions/cache@v2
      id: rubygem-cache
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ env.ImageVersion }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: ${{ runner.os }}-${{ env.ImageVersion }}-gem-
    - name: Cache Mint
      uses: actions/cache@v2
      id: mint-cache
      with:
        path: /usr/local/lib/mint
        key: ${{ runner.os }}-mint-${{ hashFiles('./Mintfile') }}
        restore-keys: ${{ runner.os }}-mint-
    - uses: ./.github/actions/bootstrap
    - name: Build Demo App
      run: bundle exec fastlane build_demo
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "Build Demo App"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: ${{ github.event_name == 'push' && failure() }}
