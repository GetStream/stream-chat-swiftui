name: Cron Checks

on:
  schedule:
    # Runs "At 02:00 every night except weekends"
    - cron: '0 2 * * 1-5'

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  HOMEBREW_NO_INSTALL_CLEANUP: 1 # Disable cleanup for homebrew, we don't need it on CI
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-test-app-and-frameworks:
    name: Build Test App and Frameworks
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: ./.github/actions/ruby-cache
    - uses: ./.github/actions/xcode-cache
    - name: Build
      run: bundle exec fastlane build_test_app_and_frameworks
      timeout-minutes: 60
    - uses: actions/upload-artifact@v4
      if: success()
      with:
        name: cache-derived-data
        path: |
          derived_data/Build/**/*.app
          derived_data/Build/**/*.xctestrun
          derived_data/Build/**/*.framework

  test-e2e-debug:
    name: Test E2E UI (Debug)
    needs: build-test-app-and-frameworks
    strategy:
      matrix:
        include:
          - ios: 17.4
            xcode: 15.4
            os: macos-14
            device: "iPhone 14 Pro"
            setup_runtime: false
          - ios: 16.4
            xcode: 15.3
            os: macos-14
            device: "iPhone 14 Pro"
            setup_runtime: true
      fail-fast: false
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_EVENT: ${{ toJson(github.event) }}
      ALLURE_TOKEN: ${{ secrets.ALLURE_TOKEN }}
      XCODE_VERSION: ${{ matrix.xcode }}
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: actions/download-artifact@v4
      with:
        name: cache-derived-data
        path: derived_data/Build/
    - uses: ./.github/actions/bootstrap
      env:
        INSTALL_ALLURE: true
        INSTALL_YEETD: true
        SKIP_MINT_BOOTSTRAP: true
        SKIP_BREW_BOOTSTRAP: true
    - uses: ./.github/actions/setup-ios-runtime
      if: ${{ matrix.setup_runtime }}
      timeout-minutes: 60
      with:
        version: ${{ matrix.ios }}
        device: ${{ matrix.device }}
    - name: Launch Allure TestOps
      run: bundle exec fastlane allure_launch cron:true
    - name: Run UI Tests (Debug)
      run: bundle exec fastlane test_e2e_mock device:"${{ matrix.device }} (${{ matrix.ios }})" cron:true test_without_building:true
      timeout-minutes: 90
    - name: Allure TestOps Upload
      if: success() || failure()
      run: bundle exec fastlane allure_upload launch_id:$LAUNCH_ID
    - name: Allure TestOps Launch Removal
      if: cancelled()
      run: bundle exec fastlane allure_launch_removal launch_id:$LAUNCH_ID
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "${{ github.workflow }}: ${{ github.job }}"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: failure() && github.event_name == 'schedule'
    - name: Parse xcresult
      if: failure()
      run: |
        brew install chargepoint/xcparse/xcparse
        xcparse logs fastlane/test_output/StreamChatSwiftUITestsApp.xcresult fastlane/test_output/logs/
    - uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: Test Data E2E (iOS ${{ matrix.ios }})
        path: |
          fastlane/recordings
          fastlane/sinatra_log.txt
          fastlane/test_output/report.junit
          fastlane/test_output/logs/*/Diagnostics/**/*.txt
          fastlane/test_output/logs/*/Diagnostics/simctl_diagnostics/DiagnosticReports/*

  build-apps:
    name: Build Demo App
    strategy:
      matrix:
        include:
          - xcode: 15.4
            os: macos-14
          - xcode: 15.0.1
            os: macos-14
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: ./.github/actions/ruby-cache
    - uses: ./.github/actions/xcode-cache
    - name: Build Demo App
      run: bundle exec fastlane build_demo
      env:
        XCODE_VERSION: ${{ matrix.xcode }}
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        text: "You shall not pass!"
        job_name: "${{ github.workflow }}: ${{ github.job }}"
        fields: message,commit,author,action,workflow,job,took
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      if: failure() && github.event_name == 'schedule'

  build-xcode15:
    name: Build SDKs (Xcode 15.0)
    runs-on: macos-13
    if: ${{ github.event_name != 'push' && github.event.inputs.snapshots != 'true' }}
    env:
      XCODE_VERSION: "15.0.1"
    steps:
    - name: Connect Bot
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.BOT_SSH_PRIVATE_KEY }}
    - uses: actions/checkout@v3.1.0
    - uses: ./.github/actions/ruby-cache
    - name: List Xcode versions
      run: mdfind "kMDItemCFBundleIdentifier = 'com.apple.dt.Xcode'"
      timeout-minutes: 25
    - name: Build SwiftUI
      run: bundle exec fastlane test_ui device:"iPhone 15" build_for_testing:true
      timeout-minutes: 25
    - name: Build XCFrameworks
      run: bundle exec fastlane build_xcframeworks
      timeout-minutes: 25
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        APPSTORE_API_KEY: ${{ secrets.APPSTORE_API_KEY }}

  automated-code-review:
    name: Automated Code Review
    runs-on: macos-13
    env:
      XCODE_VERSION: "15.0.1"
    steps:
    - uses: actions/checkout@v4.1.1
    - uses: ./.github/actions/bootstrap
    - run: bundle exec fastlane rubocop
    - run: ./Scripts/run-linter.sh
    - run: bundle exec fastlane pod_lint
